package com.sugarbird.assessment.service;

import java.util.Observable;
import java.util.Observer;

import com.sugarbird.assessment.impl.Sun;


/**
 * Abstracts the common functionality between different classes which will
 * monitor the {@code Sun}. It extends the {@code Observer} class to so it be
 * informed of changes of the different states of the <code>Sun</code>.
 * 
 * @author molise
 * 
 */
public abstract class SunObserver implements Observer {

	//the name of the entity expecting notifications
	protected String name;
	//generates different time events
	protected Observable sun;
	
	/**
	 * Creates an instance of {@code SunObserver}
	 * 
	 * @param name
	 *            The name of the observer
	 * @param sun
	 *            An instance of {@code Sun}.
	 */
	public SunObserver(String name, Observable sun) {
		super();
		this.name = name;
		this.sun = sun;
	}

	public void update(Observable arg0, Object action) 
	{
		if (Sun.TimeEvent.ON_HOUR_CHANGE.equals(action))
		{
			onHourChangeAction(action);
		}
		else if(Sun.TimeEvent.ON_DAY_START.equals(action))
		{
			onDayStartAction(action);
		}
		else if(Sun.TimeEvent.ON_DAY_END.equals(action))
		{
			onDayEndAction(action);
		}
		
	}

	/**
	 * Removes this observer from the registered collection of observers.
	 */
	public void deregister() {
		sun.deleteObserver(this);
	}
	
	
	/**
	 * Gets the name of the observer
	 * @return
	 * The name of the observer.
	 */
	public String getName() {
		return this.name;
	}
	
	/**
	 * Sets the acceptance state of the event generated by the sun.
	 * @param action
	 * An event object generated by the sun.
	 */
	protected void acceptAction(Object action)
	{
		if(action instanceof Sun.TimeEvent)
		{
			((Sun.TimeEvent)action).setAccepted(true);
		}
	}
	
	
	
	/**
	 * Responsible for processing onDayStart Event generated by the Sun.
	 * @param action
	 * The event to be processed
	 */
	public abstract void onDayStartAction(Object action);
	
	/**
	 * Responsible for processing onDayEnd Event generated by the Sun.
	 * @param action
	 * The event to be processed
	 */
	public abstract void onDayEndAction( Object action);
	
	/**
	 * Responsible for processing onHourChange Event generated by the Sun.
	 * @param action
	 * The event to be processed
	 */
	public abstract void onHourChangeAction(Object action);

	
}
